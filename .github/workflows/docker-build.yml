name: Build and Push Ash-Thrash Docker Image

# Trigger only on pushes to main branch
on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual trigger

# Environment variables
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: the-alphabet-cartel/ash-thrash

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    # Required permissions for GHCR
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: 🔍 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better caching
      
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'
      
      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: 🧪 Validate Test Data
        run: |
          echo "🔍 Validating ash-thrash test data structure..."
          python src/test_data.py
          echo "✅ Test data validation complete"
      
      - name: 🔧 Validate Configuration
        run: |
          echo "🔍 Validating ash-thrash configuration..."
          python cli.py validate data
          echo "✅ Configuration validation complete"
      
      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64
      
      - name: 🔐 Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 📋 Extract Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=v3.0,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=Ash-Thrash
            org.opencontainers.image.description=Crisis Detection Testing Suite for Ash NLP
            org.opencontainers.image.vendor=The Alphabet Cartel
            org.opencontainers.image.url=https://alphabetcartel.org
            org.opencontainers.image.source=https://github.com/the-alphabet-cartel/ash-thrash
            org.opencontainers.image.documentation=https://github.com/the-alphabet-cartel/ash-thrash/blob/main/README.md
            ash.service=thrash
            ash.component=testing-suite
            ash.version=v3.0
      
      - name: 🏗️ Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VCS_REF=${{ github.sha }}
      
      - name: 🧪 Test Docker Image
        run: |
          echo "🔍 Testing built Docker image..."
          
          # Pull the image we just built
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          
          # Test that the image runs and passes health check
          docker run --rm --name ash-thrash-test \
            -e GLOBAL_NLP_API_URL=http://example.com:8881 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            python cli.py validate data
          
          echo "✅ Docker image test complete"
      
      - name: 📊 Image Information
        run: |
          echo "🐳 Docker Image Information"
          echo "=========================="
          echo "Registry: ${{ env.REGISTRY }}"
          echo "Image: ${{ env.IMAGE_NAME }}"
          echo "Tags: ${{ steps.meta.outputs.tags }}"
          echo "Digest: ${{ steps.build.outputs.digest }}"
          echo ""
          echo "🔗 Pull Commands:"
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v3.0"
          echo ""
          echo "🚀 Usage:"
          echo "docker run -d --name ash-thrash --env-file .env -p 8884:8884 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
      
      - name: 🎯 Build Complete
        if: success()
        run: |
          echo "🎉 Ash-Thrash Docker image build completed successfully!"
          echo "✅ Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          echo "✅ Available tags: latest, v3.0, main"
          echo "🚀 Ready for deployment in ash ecosystem"