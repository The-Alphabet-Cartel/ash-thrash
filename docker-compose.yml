services:
  # Main testing service
  ash-thrash:
    image: ghcr.io/the-alphabet-cartel/ash-thrash:latest
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: ash-thrash
    restart: unless-stopped
    environment:
      - NLP_SERVER_URL=${NLP_SERVER_URL}
      - MAX_CONCURRENT_TESTS=${MAX_CONCURRENT_TESTS}
      - ENABLE_SCHEDULED_TESTING=${ENABLE_SCHEDULED_TESTING}
      - COMPREHENSIVE_TEST_SCHEDULE=${COMPREHENSIVE_TEST_SCHEDULE}
      - QUICK_VALIDATION_SCHEDULE=${QUICK_VALIDATION_SCHEDULE}
    volumes:
      - ./results:/app/results
      - ./config:/app/config
      - ./src:/app/src
    networks:
      - ash-thrash-network
    depends_on:
      - ash-thrash-api
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8884/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API server for remote testing and dashboard integration
  ash-thrash-api:
    image: ghcr.io/the-alphabet-cartel/ash-thrash-api:latest
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    container_name: ash-thrash-api
    restart: unless-stopped
    ports:
      - 8884:8884
    environment:
      - NLP_SERVER_URL=${NLP_SERVER_URL}
      - API_HOST=${API_HOST}
      - API_PORT=${API_PORT:-8884}
      - API_DEBUG=${API_DEBUG}
    volumes:
      - ./results:/app/results
      - ./config:/app/config
      - ./src:/app/src
    networks:
      - ash-thrash-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8884/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional database for historical data
  ash-thrash-db:
    image: postgres:15-alpine
    container_name: ash-thrash-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-ash_testing}
      - POSTGRES_USER=${POSTGRES_USER:-ash_test}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ash_thrash_db_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ash-thrash-network
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ash_test"]
      interval: 30s
      timeout: 10s
      retries: 5
    profiles:
      - database

volumes:
  ash_thrash_db_data:

networks:
  ash-thrash-network:
    driver: bridge